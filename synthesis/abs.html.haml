!!! Strict
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title Synthesis: An Efficient Implementation of Fundamental Operating System Services - Abstract
    %link{:href => "../css/style.css", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "style.css", :rel => "stylesheet", :type => "text/css"}/
  %body
    #nav
      %a.home{:href => "../index.html"} Alexia's Home
      %a{:href => "index.html"} Dissertation
      %a.here{:href => "abs.html"} Abstract
      %a{:href => "ack.html"} Acknowledgements
      %a{:href => "toc.html"} Contents
      %a{:href => "ch1.html"} Chapter 1
      %a{:href => "ch2.html"} Chapter 2
      %a{:href => "ch3.html"} Chapter 3
      %a{:href => "ch4.html"} Chapter 4
      %a{:href => "ch5.html"} Chapter 5
      %a{:href => "ch6.html"} Chapter 6
      %a{:href => "ch7.html"} Chapter 7
      %a{:href => "ch8.html"} Chapter 8
      %a{:href => "bib.html"} Bibliography
      %a{:href => "app-A.html"} Appendix A
    #running-title
      Synthesis: An Efficient Implementation of Fundamental Operating System Services - Abstract
    #content
      %h1 Abstract
      %p
        This dissertation shows that operating systems can provide fundamental services an order of magnitude more efficiently than traditional implementations.  It describes the implementation of a new operating system kernel, Synthesis, that achieves this level of performance.
      %p
        The Synthesis kernel combines several new techniques to provide high performance without sacrificing the expressive power or security of the system.  The new ideas include:
      %ul
        %li
          Run-time code synthesis - a systematic way of creating executable machine code at runtime to optimize frequently-used kernel routines - queues, buffers, context switchers, interrupt handlers, and system call dispatchers - for specific situations, greatly reducing their execution time.
        %li
          Fine-grain scheduling - a new process-scheduling technique based on the idea of feedback that performs frequent scheduling actions and policy adjustments (at submillisecond intervals) resulting in an adaptive, self-tuning system that can support real-time data streams.
        %li
          Lock-free optimistic synchronization is shown to be a practical, efficient alternative to lock-based synchronization methods for the implementation of multiprocessor operating system kernels.
        %li
          An extensible kernel design that provides for simple expansion to support new kernel services and hardware devices while allowing a tight coupling between the kernel and the applications, blurring the distinction between user and kernel services.
      The result is a significant performance improvement over traditional operating system implementations in addition to providing new services.
