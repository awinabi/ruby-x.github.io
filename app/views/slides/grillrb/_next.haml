%section#next
  %h2 Next Plans
  %h2 What can you do
  %h2 Impact on community

%section#my_next
  %section#next
    %h2 My next Plans
    %p Benchmarks
    %p Bootstrapping
    %p Parfait

  %section#bench
    %h2 Benchmarks
    %p Micro with mixed results
    %p.fragment Integer ops slightly slower
    %p.fragment Calling 2x faster
    %p.fragment Puts faster than c

  %section#bench_conclusion
    %h2 Conclusion from Benchmarks
    %p Bigger benchmarks, more functionality
    %p.fragment Profiling
    %p.fragment Macros
    %p.fragment Inlining

  %section#better_parf
    %h2 Better Parfait
    %p Integrate existing tests
    %p.fragment Complement existing classes
    %p.fragment More classes
    %p.fragment Optimize

  %section#better_parf
    %h2 Bootstrap
    %p Compile ruby-x with rubyxc
    %p.fragment Improving compiler
    %p.fragment Figure out metacode
    %p.fragment Integrate ruby spec

%section#you
  %h2 Things you can do
  %p Spread the word
  %p Learn
  %p Participate

%section#learn
  %p Learn about compilers
  %p.fragment Learn with friends
  %p.fragment At university

%section#participate
  %h2 Participate
  %p Many topics, small and large
  %p.fragment Functionality or research
  %p.fragment no pressure

%section#topics
  %h2 Topics
  %p.fragment assemblers (architectures)
  %p.fragment Register allocation
  %p.fragment digital trees (judy)
  %p.fragment lock free synchronisation (Dr Cliff)
  %p.fragment stdlib , pi project , . . . . .

%section#community
  %h2 Impact on community
  %p assuming bootstrapped + working
  %p.fragment new applications
  %p.fragment desktops, native mobile, server
  %p.fragment Broaden base, more tools, positive spiral

%section#programming
  %h2 Impact on programming
  %p.fragment  compiling JS
  %p.fragment  compiling Python
  %p.fragment  compiling c
  %p.fragment  unification of languages
  %p.fragment  5th generation
