%section#working1
  %h2
    Currenty working
    %small (overview)
  %p basic oo (classes/ objects)
  %p.fragment memory layout
  %p.fragment calling convention
  %p.fragment binary creation

%section#vars
  %h3 variables +
  %h3 assignment
  %ul
    %li local /arg
    %li ivar
    %li implicit return

%section#static
  %h2 static calling
  %p argument passing
  %p constants
  %p local / ivar
  %p calls

%section#dynamic
  %h2 dynamic sending
  %p  as static, plus
  %p.fragment method resolution
  %p.fragment caching

%section#lambdas
  %h3 Lambdas
  %p implicit capture and compilation
  %p block passing as argument
  %p  yield with arguments
  %p return (lambda style)

%section#control
  %h3 control structures
  %p if / else / until
  %p while
  %p complex conditions
  %p no break / continue (easy)

%section#not
  %h2 Not working
  %p eval
  %p procs / binding
  %p exceptions
  %p class variables / globals
  %p multi - assignment
  %p stdlib
  %p   . . . . . .
